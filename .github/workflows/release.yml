on:
  - workflow_dispatch

name: Release packages

jobs:
  build:
    name: Create the package
    runs-on: ubuntu-latest
    environment: github_release
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - id: sdist
        run: python setup.py sdist

      - id: version
        run: |
          printf "::set-output name=version::%s\n" $(python -c "import runpy; print(runpy.run_path('noseOfYeti/__init__.py')['VERSION'])")
          printf "::set-output name=versiondash::%s\n" $(python -c "import runpy; print(runpy.run_path('noseOfYeti/__init__.py')['VERSION'].replace('.', '-'))")

      - id: package
        run: >
          printf "::set-output name=package::noseOfYeti-${{ steps.version.outputs.version}}.tar.gz"

      - id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:
          tag_name: "release-${{ steps.version.outputs.version }}"
          release_name: noseOfYeti ${{ steps.version.outputs.version }}
          body: "https://noseOfYeti.readthedocs.io/en/latest/api/changelog.html#release-${{ steps.version.outputs.versiondash }}"
          draft: false
          prerelease: false

      - id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "dist/${{ steps.package.outputs.package }}"
          asset_name: ${{ steps.package.outputs.package }}
          asset_content_type: application/tar+gzip

      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_CORE }}
          packages_dir: dist
